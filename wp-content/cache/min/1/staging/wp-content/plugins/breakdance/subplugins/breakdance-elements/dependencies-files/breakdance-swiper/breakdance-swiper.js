(function(){function BreakdanceSwiper(){const{mergeObjects}=BreakdanceFrontend.utils;function destroy(id){if(window.swiperInstances&&window.swiperInstances[id]){window.swiperInstances[id].destroy(!0,!0);delete window.swiperInstances[id]}}
function update({id,selector,settings,paginationSettings,extras}){destroy(id);const defaultOptions={settings:{effect:"slide",coverflow:{rotate:{number:50,},depth:{number:100,},stretch:{number:0,},},speed:{number:1000},autoplay_settings:{speed:{number:3000,},},advanced:{between_slides:{number:0},},},pagination:{type:"bullets",},};settings=mergeObjects(defaultOptions.settings,settings);paginationSettings=mergeObjects(defaultOptions.pagination,paginationSettings);const advancedSettings=settings.advanced;const isBuilder=!!window.parent.Breakdance;const isCoverflowEffect=settings.effect==="coverflow";const coverFlowEffect=isCoverflowEffect?{coverflowEffect:{rotate:settings.coverflow.rotate.number,slideShadows:!!settings.coverflow.shadow,depth:settings.coverflow.depth.number,stretch:settings.coverflow.stretch.number,},}:{};const fadeEffect=settings.effect==="fade"?{fadeEffect:{crossFade:!0,},}:{};const builderOnlySettings=isBuilder?{preventClicksPropagation:!1,preventClicks:!1,simulateTouch:!1,allowTouchMove:!1,}:{};const isFadeOrFlipEffect=settings.effect==="fade"||settings.effect==="flip";let forceSlidesPerViewToOneInBreakpoint=0;if(advancedSettings.one_per_view_at){const findBreakpointThatMatchesSelection=(breakpoint)=>breakpoint.id===advancedSettings.one_per_view_at;const maybeStoreBreakpoints=window.parent.Breakdance&&window.parent.Breakdance.stores.configStore.breakpoints;const maybeBreakdanceFrontentBreakpoints=window.BreakdanceFrontend&&window.BreakdanceFrontend.data.breakpoints;if(maybeStoreBreakpoints){const matchingBreakpoint=maybeStoreBreakpoints.find(findBreakpointThatMatchesSelection);if(matchingBreakpoint){forceSlidesPerViewToOneInBreakpoint=matchingBreakpoint.maxWidth}}else if(maybeBreakdanceFrontentBreakpoints){const matchingBreakpoint=maybeBreakdanceFrontentBreakpoints.find(findBreakpointThatMatchesSelection);if(matchingBreakpoint){forceSlidesPerViewToOneInBreakpoint=matchingBreakpoint.maxWidth}}}
const forceAutoplay=extras&&extras.autoplay===!0;const swiperInstance=new Swiper(`${selector} .swiper`,{...extras,speed:settings.speed.number,loop:settings.infinite==="enabled"&&!isBuilder,autoplay:settings.autoplay==="enabled"&&(!isBuilder||forceAutoplay)?{delay:settings.autoplay_settings.speed.number,pauseOnMouseEnter:!!settings.autoplay_settings.pause_on_hover,disableOnInteraction:!!settings.autoplay_settings.stop_on_interaction,stopOnLastSlide:settings.infinite!=="enabled",}:!1,effect:settings.effect,pagination:{el:`${selector} .swiper-pagination`,type:paginationSettings.type,clickable:!0,},navigation:{nextEl:`${selector} .swiper-button-next`,prevEl:`${selector} .swiper-button-prev`,},keyboard:!0,...coverFlowEffect,...fadeEffect,...builderOnlySettings,mousewheel:advancedSettings.swipe_on_scroll?{releaseOnEdges:!0,}:!1,autoHeight:!!advancedSettings.auto_height,loopPreventsSlide:!1,spaceBetween:advancedSettings.between_slides.number,centeredSlides:isCoverflowEffect?!0:settings.center_slides,watchSlidesProgress:advancedSettings.slides_per_view!==1,parallax:!0,slidesPerView:1,breakpoints:isFadeOrFlipEffect?!1:advancedSettings.slides_per_view&&{[forceSlidesPerViewToOneInBreakpoint]:{slidesPerView:advancedSettings.slides_per_view,},},});window.swiperInstances={...window.swiperInstances,[id]:swiperInstance,}}
function updateSliderFromChild(id){const sliderId=document.querySelector(`[data-node-id="${id}"]`).parentElement.closest("[data-node-id]").dataset.nodeId;const sliderIdNumber=sliderId&&parseInt(sliderId);if(window.swiperInstances&&window.swiperInstances[sliderIdNumber]){window.swiperInstances[sliderIdNumber].update()}}
function selectSlide(id){const slideElement=document.querySelector(`[data-node-id="${id}"]`).closest(".swiper-slide");if(slideElement){const slideIndex=Array.from(slideElement.parentElement.children).indexOf(slideElement);const sliderElement=slideElement.parentElement&&slideElement.parentElement.closest("[data-node-id]");const sliderId=sliderElement?sliderElement.dataset.nodeId:null;if(sliderId&&slideIndex!==null&&window.swiperInstances&&window.swiperInstances[sliderId]){window.swiperInstances[sliderId].slideTo(slideIndex,0)}}}
return{update,destroy,updateSliderFromChild,selectSlide,}}
window.BreakdanceSwiper=BreakdanceSwiper})()